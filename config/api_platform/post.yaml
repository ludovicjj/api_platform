resources:
    App\Entity\Post:
        attributes:
            normalization_context:
                groups: [ 'read:posts' ]
                openapi_definition_name: 'Collection'
            denormalization_context:
                groups: [ 'write:post' ]
            pagination_items_per_page: 10
            pagination_maximum_items_per_page: 10
            pagination_client_items_per_page: true

        collectionOperations:
            get:
                method: GET
                filters: [ 'post.order_filter' ]
                normalization_context:
                    groups: [ 'read:posts', 'read:post' ]
                    openapi_definition_name: 'Detail'
                openapi_context:
                    security:
                        - bearerAuth: []
            post:
                method: POST
                validation_groups: [ App\Entity\Post, 'validationGroups' ]
            count:
                method: 'GET'
                path: '/posts/count'
                controller: App\Controller\PostCountController
                read: false
                pagination_enabled: false
                openapi_context:
                    summary: Calcule le nombre d'article online/offline
                    description: Calcule le nombre d'article online/offline
                    parameters:
                        -   name: online
                            description: filtre les articles en ligne
                            in: query
                            required: false
                            allowEmptyValue: true
                            schema:
                                type: integer
                                enum: [ 0, 1 ]
                    responses:
                        200:
                            description: Nombre de r√©sultats
                            content:
                                application/json:
                                    schema:
                                        type: integer
                                        example: 3
        itemOperations:
            put:
                method: PUT
            delete:
                method: DELETE
            get:
                method: GET
            publish:
                method: 'POST'
                path: '/posts/{id}/publish'
                controller: App\Controller\PostPublishController
                openapi_context:
                    summary: Permet de mettre en ligne un article
                    description: Permet de mettre en ligne un article
                    requestBody:
                        content:
                            application/json:
                                schema:
                                    type: object